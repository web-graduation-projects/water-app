# name: Run Tests

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Set up Docker
#         uses: docker/setup-buildx-action@v2

#       - name: Install Docker Compose
#         run: |
#           sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#           sudo chmod +x /usr/local/bin/docker-compose

#       - name: Build and run Laravel Sail
#         run: |
#           docker-compose up -d
#           docker-compose exec -T laravel.test composer install
#           docker-compose exec -T laravel.test php artisan key:generate
#           docker-compose exec -T laravel.test php artisan migrate --force
#         env:
#           DB_PASSWORD: password
#           DB_DATABASE: laravel
#           DB_USERNAME: sail

#       - name: Run tests
#         run: docker-compose exec -T laravel.test php artisan test --coverage
#         env:
#           DB_PASSWORD: password
#           DB_DATABASE: laravel
#           DB_USERNAME: sail

#       - name: Upload coverage to GitHub
#         uses: codecov/codecov-action@v3
#         with:
#           files: coverage.xml


name: Run PHPUnit Tests

on:
  workflow_call:
  push:
    branches-ignore:
      - main

jobs:
  run-phpunit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d

      - name: Wait for MySQL to be ready
        run: |
          docker-compose exec mysql bash -c 'until mysqladmin ping -h "localhost" --silent; do sleep 1; done'

      - name: Prepare Application
        run: |
          cp .env.example .env
          php artisan key:generate
          php artisan doctrine:generate:proxies
          php artisan storage:link
          php artisan migrate --seed

      - name: PHPUnit
        run: php artisan test --parallel --coverage-clover=coverage.xml
      - uses: codecov/codecov-action@v4
        env:
          DB_PASSWORD: password
          DB_DATABASE: laravel
          DB_USERNAME: sail
      - name: Tear down Docker Compose
        if: always()
        run: docker-compose down
